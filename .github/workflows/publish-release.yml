name: Publish release
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'

env:
  ELECTRON_IS_DEV: 0
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CSC_LINK: ${{ secrets.CODE_SIGNING_CERTIFICATE }}
  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
  KEYCHAIN_PASS: ${{ secrets.KEYCHAIN_PASS }}

jobs:
  release-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: 'npm'
      - run: npm ci

      - name: Setup Certificates
        run: |
            echo $CSC_LINK | base64 --decode > certificate.p12 
            security create-keychain -p $KEYCHAIN_PASS build.keychain
            security default-keychain -s build.keychain
            security unlock-keychain -p $KEYCHAIN_PASS build.keychain
            security import certificate.p12 -k build.keychain -P $CSC_KEY_PASSWORD -T /usr/bin/codesign;
            security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASS build.keychain
            rm -rf *.p12

      - name: publish
        run: npm run publish-mac

      - name: Get release tag
        run: echo "GIT_TAG=v`$(echo node -p "require('./package.json').version")`" >> $GITHUB_ENV

      - name: Delete blockmap asset
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.GIT_TAG }}
          assets: '*.zip.blockmap'

  release-win:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          sudo dpkg --add-architecture i386
          wget -O - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
          sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ jammy main'
          sudo apt update && sudo apt install --install-recommends winehq-stable wine32
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: 'npm'
      - run: npm ci
      - name: publish
        run: npm run publish-win
